{"ast":null,"code":"var _jsxFileName = \"/Users/stephenstocking/Desktop/coding class/react course/clouds-rest/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectMemoizedShopCollections, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  isCollectionsLoaded,\n  memoizedCollections,\n  fetchCollectionsStartAsync\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync(); // optional cleanup function on component unmount\n  }, //optional dependency array\n  [memoizedCollections]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !isCollectionsLoaded\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 76\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  memoizedCollections: selectMemoizedShopCollections,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/stephenstocking/Desktop/coding class/react course/clouds-rest/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","createStructuredSelector","connect","CollectionsOverviewContainer","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","selectMemoizedShopCollections","selectIsCollectionsLoaded","CollectionPageWithSpinner","ShopPage","match","isCollectionsLoaded","memoizedCollections","path","props","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAUC,wBAAV,QAA0C,UAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,6BAArC,EAAoEC,yBAApE,QAAqG,iCAArG;AAEA,MAAMC,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,mBAAT;AAA8BC,EAAAA,mBAA9B;AAAmDR,EAAAA;AAAnD,CAAD,KAAqF;AAElGP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,0BAA0B,GADd,CAGZ;AAEH,GALQ,EAMP;AACF,GAACQ,mBAAD,CAPS,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEZ,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAES,KAAK,CAACG,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAE,CAACH;AAAvC,OAAgEG,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAlBD;;AAoBA,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC7CiB,EAAAA,oBAAoB,EAAEX,0BADuB;AAE7CO,EAAAA,mBAAmB,EAAEN,6BAFwB;AAG7CK,EAAAA,mBAAmB,EAAEJ;AAHwB,CAAD,CAAhD;;AAMA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport {  createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectMemoizedShopCollections, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, isCollectionsLoaded, memoizedCollections, fetchCollectionsStartAsync }) => {\n\n    useEffect(() => {\n        fetchCollectionsStartAsync();\n\n        // optional cleanup function on component unmount\n    \n    }, \n      //optional dependency array\n    [memoizedCollections]  \n    );\n\n    return (\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\n            <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props}/>} />\n        </div>\n        )\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    memoizedCollections: selectMemoizedShopCollections,\n    isCollectionsLoaded: selectIsCollectionsLoaded\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}