{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(\"signInWithEmail response\", user);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    put(signInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAutheticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAutheticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield put(signUpSuccess());\n    const userRef = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(userRef.user);\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/stephenstocking/Desktop/coding class/react course/clouds-rest/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","err","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAutheticated","onCheckUserSession","CHECK_USER_SESSION","signOut","signUp","displayName","createUserWithEmailAndPassword","error","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { signInSuccess,\n    signInFailure,\n    signOutSuccess, \n    signOutFailure, \n    signUpSuccess, \n    signUpFailure } from './user.actions';\n\nimport { auth, \n    googleProvider, \n    createUserProfileDocument,\n    getCurrentUser } from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get()\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (err) {\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    } catch (err) {\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const  { user } = yield auth.signInWithEmailAndPassword(email, password);\n        console.log(\"signInWithEmail response\", user)\n        yield getSnapshotFromUserAuth(user)\n    } catch (err) {\n        put(signInFailure(err))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserActionTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n        )\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(\n        UserActionTypes.EMAIL_SIGN_IN_START,\n        signInWithEmail\n    )\n}\n\nexport function* isUserAutheticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch (err) {\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAutheticated)\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch (err) {\n        yield put(signOutFailure(err))\n    }\n}\n\nexport function* signUp({payload: { displayName, email, password }}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\n        \n        yield createUserProfileDocument(user, { displayName });\n        yield put(signUpSuccess());\n        const  userRef = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(userRef.user)\n    } catch (error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart), \n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}