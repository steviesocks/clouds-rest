{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/stephenstocking/Desktop/coding class/react course/clouds-rest/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AAErC,MAAI;AACA,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC7BI,+BAD6B,EAE7BM,QAF6B,CAAjC;AAIA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GARD,CAQE,OAAOC,GAAP,EAAY;AACV,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,GAAG,CAACC,OAAL,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,SAAS,CACXG,eAAe,CAACc,uBADL,EAEXT,qBAFW,CAAf;AAKH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(\n            convertCollectionsSnapshotToMap, \n            snapshot\n        );    \n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (err) {\n        yield put(fetchCollectionsFailure(err.message));\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n    );\n\n}"]},"metadata":{},"sourceType":"module"}