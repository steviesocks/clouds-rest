{"ast":null,"code":"var _jsxFileName = \"/Users/stephenstocking/Desktop/coding class/react course/clouds-rest/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectShopCollections } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  isCollectionFetching,\n  collections,\n  fetchCollectionsStartAsync\n}) => {\n  const [changed, setChanged] = useState(false);\n  console.log('collections', collections);\n  useEffect(() => {\n    fetchCollectionsStartAsync(); // optional cleanup function on component unmount\n  }, //optional dependency array\n  [changed]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 68\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isCollectionFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 76\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  collections: selectShopCollections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/stephenstocking/Desktop/coding class/react course/clouds-rest/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","Route","createStructuredSelector","connect","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","selectShopCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isCollectionFetching","collections","changed","setChanged","console","log","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAUC,wBAAV,QAA0C,UAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,qBAArC,QAAkE,iCAAlE;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,oBAAT;AAA+BC,EAAAA,WAA/B;AAA4CR,EAAAA;AAA5C,CAAD,KAA8E;AAC3F,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,WAA3B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,0BAA0B,GADd,CAGZ;AAEH,GALQ,EAMP;AACF,GAACS,OAAD,CAPS,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEH,KAAK,CAACO,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAEP;AAA3C,OAAqEO,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAER,KAAK,CAACO,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEP;AAAtC,OAAgEO,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CApBD;;AAsBA,MAAMC,eAAe,GAAGpB,wBAAwB,CAAC;AAC7CY,EAAAA,oBAAoB,EAAEN,0BADuB;AAE7CO,EAAAA,WAAW,EAAEN;AAFgC,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport {  createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectShopCollections } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, isCollectionFetching, collections, fetchCollectionsStartAsync }) => {\n    const [ changed, setChanged ] = useState(false)\n    console.log('collections', collections)\n\n    useEffect(() => {\n        fetchCollectionsStartAsync();\n\n        // optional cleanup function on component unmount\n    \n    }, \n      //optional dependency array\n    [changed]  \n    );\n\n    return (\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\n            <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n        </div>\n        )\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    collections: selectShopCollections\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}